{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import json\n",
    "import copy\n",
    "dictinput = pd.read_csv(\"input.csv\").fillna(\"\").to_dict(orient = \"record\")\n",
    "outputData = []\n",
    "for eachrow in dictinput:\n",
    "    outputDataRow ={}\n",
    "    outputDataRow['Taskid'] = eachrow['TaskId']\n",
    "    outputDataRow['L1_U1_User'] = eachrow['L1_U1_User']\n",
    "    outputDataRow['L2_U1_User'] = eachrow['L2_U1_User']\n",
    "    outputDataRow['L3_U1_User'] = eachrow['L3_U1_User']\n",
    "    outputDataRow['L1_U1_Start_Time'] = eachrow['L1_U1_Start_Time']\n",
    "    outputDataRow['L1_U1_End_Time'] = eachrow['L1_U1_End_Time']\n",
    "    outputDataRow['L1_U1_Time_Taken(secs)'] = eachrow['L1_U1_Time_Taken(secs)']\n",
    "    outputDataRow['L2_U1_Start_Time'] = eachrow['L2_U1_Start_Time']\n",
    "    outputDataRow['L2_U1_End_Time'] = eachrow['L2_U1_End_Time']\n",
    "    outputDataRow['L2_U1_TimeTaken(secs)'] = eachrow['L2_U1_Time_Taken(secs)']\n",
    "    outputDataRow['L3_U1_Start_Time'] = eachrow['L3_U1_Start_Time']\n",
    "    outputDataRow['L3_U1_End_Time'] = eachrow['L3_U1_End_Time']\n",
    "    outputDataRow['L3_U1_Time_Taken(secs)'] = eachrow['L3_U1_Time_Taken(secs)']\n",
    "    outputDataRow['Name'] = eachrow['Name']\n",
    "    outputDataRow['Address'] = eachrow['address']\n",
    "    outputDataRow['District'] = ''\n",
    "    outputDataRow['Latitude'] = eachrow['ref_latitude']\n",
    "    outputDataRow['Longitude'] = eachrow['ref_longitude']\n",
    "    outputDataRow['Reviewer'] = ''\n",
    "    outputDataRow['Start Time'] = ''\n",
    "    geofence = []\n",
    "    if len(eachrow['Geofence']) > 0:\n",
    "        geofence = json.loads(eachrow['Geofence'])\n",
    "    #print(geofence)\n",
    "    for each in geofence:\n",
    "        if len(each) == 0:\n",
    "            continue\n",
    "        outputDataRow['Attribute'] = 'Geofence'\n",
    "        outputDataRow['Reference ID'] = each['Reference ID']\n",
    "        outputDataRow['Reference URL'] = each['Reference URL']\n",
    "        outputDataRow['Source'] = each['Source']\n",
    "        if('AImagery' in each):\n",
    "            outputDataRow [ 'AImagery' ] = each [ 'AImagery' ]\n",
    "        else:\n",
    "            outputDataRow['AImagery'] = ''\n",
    "        outputDataRow['Comment'] = each['Comment']\n",
    "        outputData.append(outputDataRow)\n",
    "        outputDataRow = copy.deepcopy(outputDataRow)\n",
    "    amenity = []\n",
    "    if len(eachrow [ 'Amenity' ]) > 0 :\n",
    "        amenity = json.loads(eachrow [ 'Amenity' ])\n",
    "    for each in amenity :\n",
    "        if len(each) == 0:\n",
    "            continue\n",
    "        outputDataRow [ 'Attribute' ] = 'Amenity'\n",
    "        outputDataRow [ 'Reference ID' ] = each [ 'Key' ]\n",
    "        outputDataRow [ 'Reference URL' ] = each [ 'Value' ]\n",
    "        outputDataRow [ 'Source' ] = ''\n",
    "        outputDataRow [ 'AImagery' ] = ''\n",
    "        outputDataRow [ 'Comment' ] = ''\n",
    "        outputData.append(outputDataRow)\n",
    "        outputDataRow = copy.deepcopy(outputDataRow)\n",
    "    entrance_and_exits = []\n",
    "    if len(eachrow [ 'Entrance and Exits' ]) >0:\n",
    "        entrance_and_exits = json.loads(eachrow [ 'Entrance and Exits' ])\n",
    "    for each in entrance_and_exits :\n",
    "        if len(each) == 0:\n",
    "            continue\n",
    "        outputDataRow [ 'Attribute' ] = 'Entrance and Exits'\n",
    "        outputDataRow [ 'Reference ID' ] = each [ 'Reference ID' ]\n",
    "        outputDataRow [ 'Reference URL' ] = each [ 'Reference URL' ]\n",
    "        outputDataRow [ 'Source' ] = each [ 'Source' ]\n",
    "        outputDataRow [ 'AImagery' ] = ''\n",
    "        outputDataRow [ 'Comment' ] = each [ 'Comment' ]\n",
    "        outputData.append(outputDataRow)\n",
    "        outputDataRow = copy.deepcopy(outputDataRow)\n",
    "    pickup_updrop = []\n",
    "    if(len(eachrow [ 'Pickup-updrop' ])>0):\n",
    "        pickup_updrop = json.loads(eachrow [ 'Pickup-updrop' ])\n",
    "    for each in pickup_updrop :\n",
    "        if len(each) == 0:\n",
    "            continue\n",
    "        outputDataRow [ 'Attribute' ] = 'Pickup-updrop'\n",
    "        outputDataRow [ 'Reference ID' ] = each [ 'Reference ID' ]\n",
    "        outputDataRow [ 'Reference URL' ] = each [ 'Reference URL' ]\n",
    "        outputDataRow [ 'Source' ] = each [ 'Source' ]\n",
    "        outputDataRow [ 'AImagery' ] = ''\n",
    "        outputDataRow [ 'Comment' ] = each [ 'Comment' ]\n",
    "        outputData.append(outputDataRow)\n",
    "        outputDataRow = copy.deepcopy(outputDataRow)\n",
    "    vehicular_access = [ ]\n",
    "    if (len(eachrow [ 'vehicular access' ]) > 0) :\n",
    "        vehicular_access = json.loads(eachrow [ 'vehicular access' ])\n",
    "    for each in vehicular_access :\n",
    "        if len(each) == 0 :\n",
    "            continue\n",
    "        outputDataRow [ 'Attribute' ] = 'vehicular access'\n",
    "        outputDataRow [ 'Reference ID' ] = each [ 'Reference ID' ]\n",
    "        outputDataRow [ 'Reference URL' ] = each [ 'Reference URL' ]\n",
    "        outputDataRow [ 'Source' ] = each [ 'Source' ]\n",
    "        outputDataRow [ 'AImagery' ] = ''\n",
    "        outputDataRow [ 'Comment' ] = each [ 'Comment' ]\n",
    "        outputData.append(outputDataRow)\n",
    "        outputDataRow = copy.deepcopy(outputDataRow)\n",
    "    parking = []\n",
    "    if len(eachrow [ 'Parking' ]) > 0:\n",
    "        parking = json.loads(eachrow [ 'Parking' ])\n",
    "    for each in parking :\n",
    "        if len(each) == 0 :\n",
    "            continue\n",
    "        outputDataRow [ 'Attribute' ] = 'Parking'\n",
    "        outputDataRow [ 'Reference ID' ] = each [ 'Reference ID' ]\n",
    "        outputDataRow [ 'Reference URL' ] = each [ 'Reference URL' ]\n",
    "        outputDataRow [ 'Source' ] = each [ 'Source' ]\n",
    "        outputDataRow [ 'AImagery' ] = ''\n",
    "        outputDataRow [ 'Comment' ] = each [ 'Comment' ]\n",
    "        outputData.append(outputDataRow)\n",
    "        outputDataRow = copy.deepcopy(outputDataRow)\n",
    "pd.DataFrame(outputData).fillna('').to_csv(\"output.csv\", index = False)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
